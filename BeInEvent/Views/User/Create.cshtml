@model BeInEvent.Models.Event


@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
    TempData.Keep();
    var check =ViewBag.check;
}

<br />
<br />
   <br /> 
<div id="d" class="container">




   

    @*@using (Html.BeginForm("Create", "User", FormMethod.Post, new { enctype = "multipart/form-data" }))*@

    @using (Html.BeginForm("Create", "User", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()




        <div class="form-horizontal">
            <h4>Create Event</h4>
            <hr />

            @Html.ValidationSummary()
            <div class="form-group">
                @Html.LabelFor(model => model.EventName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EventName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EventName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">

                @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })

                <div class="col-md-10">
                    <input type="file" value="Add" name="myimg" />

                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NumberOfTickets, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NumberOfTickets, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NumberOfTickets, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group">

                    @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                    </div>
                </div>*@

            <div class="form-group">
                @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.City, "City", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(a => a.City, ViewBag.city as SelectList, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group">
                    @Html.LabelFor(model => model.PublisherID, "PublisherID", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("PublisherID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.PublisherID, "", new { @class = "text-danger" })
                    </div>
                </div>*@


            <div class="form-group">
                @Html.LabelFor(model => model.CategoryID, "Category", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(a => a.CategoryID, ViewBag.Cat as SelectList, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
                </div>
            </div>

            @{var mess = ViewBag.message;
                if (mess == "success")
                {


                    @Html.Label("sucsses", new { @class = "text-success" });


                }
                else if (mess == "faild")
                {

                    @Html.Label("faild", new { @class = "text-danger" });


                }
            }
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">


                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
                }

    <div>
        @*@Ajax.ActionLink("Create TicketType", "TicketType", new AjaxOptions()
   {

       UpdateTargetId = "d",
       InsertionMode = InsertionMode.Replace
   })*@
        @if(check==1)
        {
        @Html.ActionLink("Create TicketType", "TicketType")
        }

    </div>
</div>




@section Scripts{

    <script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>
    <script src="~/Models/Scripts/jquery.validate.unobtrusive.js"></script>

    <script src="~/Models/Scripts/jquery.validate.min.js"></script>


}




@*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@

